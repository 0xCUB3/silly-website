---
import '../styles/global.css'; // Import global styles
import '../styles/app-layout.css'; // Import app-specific content styles
import Footer from '../components/Footer.astro';

// Define Props for the layout component
export interface Props {
    appName: string;
    appIcon?: string; // e.g., path to app icon SVG or PNG
    logoSrc?: string; // Path to the main site logo, defaults if not provided
    pageTitle?: string; // For the <title> tag, defaults if not provided
}

// Destructure props with default values
const { 
    appName = "App Name", // Default if not passed
    logoSrc = "/placeholder-logo.svg", // Default site logo
    pageTitle // No default, will be constructed below if not provided
} = Astro.props;

// Construct the final title for the <title> tag
const displayTitle = pageTitle || `${appName} - Alexander Skula`;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{displayTitle}</title>

    <style is:global>
        /* Base styles */
        body.app-layout {
            margin: 0;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .app-header {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .app-header .logo img {
            height: 24px;
            width: auto;
        }

        .app-header nav ul {
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            gap: 2rem;
        }

        .app-content {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            flex-grow: 1;
            padding: 0 2rem;
        }

        @media (max-width: 768px) {
            .app-content {
                padding: 0 1rem;
            }
            
            .app-header {
                padding: 1rem;
            }
            
            .app-header nav ul {
                gap: 1rem;
            }
        }
    </style>
    
    <style is:global>
        @keyframes fadeInUp { 
            from { 
                opacity: 0; 
                transform: translateY(10px); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0); 
            }
        }
        
        .app-icon-main, .hero h1, .hero .tagline, 
        .hero .action-buttons a, .hero .sub-links, 
        .hero .source-code-link, .hero .compatibility {
            opacity: 0;
        }

        body.is-loaded .app-icon-main {
            animation: fadeInUp 0.4s ease-out 0.1s forwards;
        }
        body.is-loaded .hero h1 {
            animation: fadeInUp 0.4s ease-out 0.2s forwards;
        }
        body.is-loaded .hero .tagline {
            animation: fadeInUp 0.4s ease-out 0.3s forwards;
        }
        body.is-loaded .hero .action-buttons a {
            animation: fadeInUp 0.4s ease-out 0.4s forwards;
        }
        body.is-loaded .hero .sub-links {
            animation: fadeInUp 0.4s ease-out 0.5s forwards;
        }
        body.is-loaded .hero .source-code-link {
            animation: fadeInUp 0.4s ease-out 0.6s forwards;
        }
        body.is-loaded .hero .compatibility {
            animation: fadeInUp 0.4s ease-out 0.7s forwards;
        }
    </style>
</head>
<body class="app-layout">
    <header class="app-header">
        <div class="logo">
            <!-- Use a generic logo or pass via prop -->
            <a href="/">
                <img src={logoSrc} alt="Site Logo">
            </a>
        </div>
        <nav>
            <ul>
                <!-- Static links similar to reference -->
                <li><a href="/#apps">Other apps</a></li>
                <li><a href="/privacy">Privacy</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
        </nav>
    </header>

    <main class="app-content">
        <slot /> <!-- Where the specific app page content will go -->
    </main>

    <Footer /> <!-- Use the existing footer component -->

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            requestAnimationFrame(() => {
                document.body.classList.add('is-loaded');
            });
        });
    </script>
</body>
</html> 